{"version":3,"sources":["img/defaultPictureBig.png","img/logo.PNG","components/Input.js","Shared/ApiProgress.js","Api/ApiCalls.js","Redux/authAction.js","Redux/Constants.js","Pages/LoginPage.js","components/ProfilePictureWithDefault.js","components/UserListItem.js","components/Spiner.js","components/UserList.js","components/AutoUploadImage.js","components/TweetSubmit.js","components/Modal.js","components/TweetView.js","components/TweetFeed.js","Pages/HomePage.js","Pages/UserSingupPage.js","Pages/NavBar.js","components/ProfileCard.js","Pages/UserPage.js","App.js","serviceWorker.js","Redux/authReducer.js","Redux/ConfigureStore.js","index.js"],"names":["module","exports","Input","props","label","error","name","onChange","type","defaultValue","className","undefined","autoComplete","useApiProgress","apiMethod","apiPath","strictPath","useState","pendingApiCall","setPendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","use","response","config","eject","getUsers","page","size","get","setAuthorizationHeader","username","password","isLoggedIn","authorizationHeaderValue","btoa","defaults","headers","getUser","updateUser","updatedDisplayName","put","postTweet","tweet","post","getTweets","path","getOldTweets","id","getNewTweetCount","getNewTweets","postTweetAttachment","attachment","deleteTweet","delete","deleteLike","tweetId","loginSuccess","authState","payload","loginHandler","credentials","dispatch","a","creds","auth","data","singupHandler","user","addedUser","LoginPage","setUsername","setPassword","setError","useDispatch","onClickLogin","event","preventDefault","history","push","message","buttonEnabled","target","value","onClick","disabled","ProfilePictureWithDefault","image","tempimage","imageSource","defaultPicture","src","alt","onError","UserListItem","displayName","to","width","height","Spiner","UserList","content","number","setPage","loadFail","setLoadFail","loadUser","users","last","first","actionDiv","prevPage","nextPage","role","map","key","AutoUploadImage","uploading","style","position","opacity","TweetSubmit","useSelector","store","focused","setFocused","setTweet","errors","setErrors","newImage","setNewImage","attachmentId","setAttachmentId","pendingFileUpload","onClikcTweet","body","validationErrors","uploadFile","file","FormData","append","textAreaClass","onFocus","rows","files","length","fileReader","FileReader","onloadend","result","readAsDataURL","fontSize","Modal","visible","onClickCancel","onClickOk","modalTittle","backgroundColor","TweetView","loggedInUser","onDeleteTweet","date","fileAttachment","likeCount","iliked","modalVisible","setModalVisible","likeCountUI","setLikecountUI","isliked","setIsLiked","isOwned","onClikdelete","onClickLike","formetted","format","hover","color","TweetFeed","tweetPage","setTweetPage","newTweetCount","setNewTweetCount","useParams","ınıtialTweetLoadProgress","lastTweetId","firsTweetId","lastTweetIndex","oldTweetPath","loadOldTweetsProgress","newTweetPath","loadNewTweetsProgress","looper","setInterval","count","clearInterval","prevState","loadTweet","loadOldTweets","loadNewTweets","onDeleteTweetSucces","filter","cursor","HomePage","UserSingupPage","passwordRepeatError","passwordRepeat","form","setForm","previousState","onClickSingUp","pendingApiCallSignup","pendingApiCallLogin","usernameError","displayNameError","passwordError","NavBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracler","removeEventListener","current","contains","Links","dropdownClass","ref","logo","ProfileCard","inEditMode","setInEditMode","setUpdatedDisplayName","loggedInUsername","pathUsername","setUser","editable","setEditable","useHistory","onClickDeleteUser","onClickSave","split","pendingApiCallforDelete","UserPage","notFound","setNotFound","match","params","App","component","exact","Boolean","window","location","hostname","defaultState","authReducer","state","action","SecureLs","SecureLS","initialState","authData","stateInLocalStorage","getStateFromStorage","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,2NCsB5BC,EApBD,SAACC,GAAW,IACfC,EAAoDD,EAApDC,MAAOC,EAA6CF,EAA7CE,MAAOC,EAAsCH,EAAtCG,KAAMC,EAAgCJ,EAAhCI,SAAUC,EAAsBL,EAAtBK,KAAMC,EAAgBN,EAAhBM,aACvCC,EAAY,eAKhB,MAJa,SAATF,IACAE,GAAa,cACNC,IAARN,IACCK,GAAW,eAEX,yBAAKA,UAAU,cACX,+BAAQN,GACR,2BAAOM,UAAWA,EAAWF,KAAMA,EAAMF,KAAMA,EAAMG,aAAcA,EAC5DF,SAAUA,EACTK,aAAa,QAErB,yBAAKF,UAAU,oBACVL,K,gBCdJQ,EAAiB,SAACC,EAAWC,EAASC,GAAgB,IAAD,EAClBC,oBAAU,GADQ,mBACvDC,EADuD,KACvCC,EADuC,KAkD9D,OA/CAC,qBAAW,WACP,IAAIC,EAAoBC,EAElBC,EAAmB,SAACC,EAAQC,EAAKC,GAC/BF,IAAWV,IAGXE,GAAcS,IAAQV,IAEdC,GAAcS,EAAIE,WAAYZ,KADtCI,EAAmBO,IAkC3B,OA3BIL,EAAqBO,IAAMC,aAAaC,QAAQC,KAAK,SAAAD,GAAY,IACtDL,EAAeK,EAAfL,IAAKD,EAAUM,EAAVN,OAEZ,OADAD,EAAkBC,EAAQC,GAAK,GACxBK,KAGXR,EAAsBM,IAAMC,aAAaG,SAASD,KAC9C,SAAAC,GAAa,IAAD,EACcA,EAASC,OAAxBR,EADC,EACDA,IAAKD,EADJ,EACIA,OAEZ,OADAD,EAAkBC,EAAQC,GAAK,GACxBO,KAEX,SAAA3B,GAAU,IAAD,EACiBA,EAAM4B,OAArBR,EADF,EACEA,IAAKD,EADP,EACOA,OAEZ,MADAD,EAAkBC,EAAQC,GAAK,GACzBpB,KAYX,WANHuB,IAAMC,aAAaC,QAAQI,MAAOb,GAClCO,IAAMC,aAAaG,SAASE,MAAOZ,MAQxC,CAACP,EAASD,EAAWE,IAEjBE,G,cC3CEiB,EAAW,WAAyB,IAAxBC,EAAuB,uDAAhB,EAAGC,EAAa,uDAAN,EACtC,OAAOT,IAAMU,IAAN,0BAA8BF,EAA9B,iBAA2CC,KAGzCE,EAAyB,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAC9C,GADwE,EAAhBC,WACxC,CACZ,IAAMC,EAAwB,gBAAYC,KAAMJ,EAAW,IAAMC,IACjEb,IAAMiB,SAASC,QAAf,cAA0CH,cAEnCf,IAAMiB,SAASC,QAAf,eAGFC,EAAU,SAAAP,GACnB,OAAOZ,IAAMU,IAAN,qBAAyBE,KAIvBQ,EAAW,SAACR,EAASS,GAC9B,OAAOrB,IAAMsB,IAAN,qBAAwBV,GAAWS,EAAmB,CAACH,QAAS,CAAC,kBAAmB,SAGlFK,EAAU,SAACC,GACpB,OAAOxB,IAAMyB,KAAK,cAAcD,IAIvBE,EAAU,SAACd,EAASJ,GAC7B,IAAMmB,EAAKf,EAAQ,eAAWA,EAAX,iBAAoC,oBACvD,OAAOZ,IAAMU,IAAIiB,EAAKnB,IAGboB,EAAa,SAACC,EAAGjB,GAC1B,IAAMe,EAAKf,EAAQ,eAAWA,EAAX,mBAA8BiB,GAAK,cAAcA,EACpE,OAAO7B,IAAMU,IAAIiB,IAGRG,EAAiB,SAACD,EAAGjB,GAC9B,IAAMe,EAAKf,EAAQ,eAAWA,EAAX,mBAA8BiB,EAA9B,qCAA8DA,EAA9D,eACnB,OAAO7B,IAAMU,IAAIiB,IAKRI,EAAa,SAACF,EAAGjB,GAC1B,IAAMe,EAAKf,EAAQ,eAAWA,EAAX,mBAA8BiB,EAA9B,0CAAkEA,EAAlE,oBACnB,OAAO7B,IAAMU,IAAKiB,IAGTK,EAAoB,SAACC,GAC9B,OAAOjC,IAAMyB,KAAK,yBAAyBQ,IAIlCC,EAAY,SAAAL,GACrB,OAAO7B,IAAMmC,OAAO,eAAeN,IAS1BO,EAAW,SAACC,GACrB,OAAOrC,IAAMmC,OAAO,sBAAsBE,ICjEjCC,EAAa,SAAAC,GACtB,MAAO,CACH3D,KCXmB,gBDYnB4D,QAAQD,IAcHE,EAAa,SAACC,GACvB,8CAAO,WAAgBC,GAAhB,iBAAAC,EAAA,sEDrBWC,ECsBeH,EDrB1B1C,IAAMyB,KAAM,YAAa,GAAI,CAACqB,KAAMD,ICoBpC,cACGzC,EADH,OAEGmC,EAFH,2BAGInC,EAAS2C,MAHb,IAIClC,SAAS6B,EAAY7B,WAEzB8B,EAASL,EAAaC,IANnB,kBAOInC,GAPJ,iCDrBU,IAACyC,ICqBX,OAAP,uDAWSG,EAAc,SAACC,GACxB,8CAAO,WAAeN,GAAf,eAAAC,EAAA,sEDrCYM,ECsCcD,EDrC1BjD,IAAMyB,KAAM,aAAcyB,EAAW,CAAChC,QAAS,CAAC,kBAAmB,QCoCnE,cACGd,EADH,gBAEGuC,EAASF,EAAaQ,IAFzB,gCAGI7C,GAHJ,iCDrCW,IAAC8C,ICqCZ,OAAP,uDEoBYC,EApDE,SAAC5E,GAAW,IAAD,EAEOc,qBAFP,mBAElBuB,EAFkB,KAERwC,EAFQ,OAGO/D,qBAHP,mBAGlBwB,EAHkB,KAGRwC,EAHQ,OAIChE,qBAJD,mBAIlBZ,EAJkB,KAIX6E,EAJW,KAKnBX,EAASY,cAEf/D,qBAAU,WACN8D,OAASvE,KACX,CAAC6B,EAASC,IAEZ,IAAM2C,EAAY,uCAAG,WAAMC,GAAN,mBAAAb,EAAA,6DACjBa,EAAMC,iBACAb,EAAQ,CACVjC,WACAC,YAGG8C,EAAapF,EAAboF,QACAC,EAAQD,EAARC,KAEPN,OAAUvE,GAVO,kBAYP4D,EAAUF,EAAcI,IAZjB,OAabe,EAAM,KAbO,kDAebN,EAAU,KAASlD,SAAS2C,KAAKc,SAfpB,0DAAH,sDAkBZvE,EAAiBL,EAAe,OAAO,aACvC6E,EAAgBlD,GAAYC,EAClC,OACI,yBAAK/B,UAAU,kBACX,wBAAIA,UAAU,eAAd,SACA,8BACI,kBAAC,EAAD,CAAON,MAAM,WAAWG,SAAU,SAAA8E,GAAK,OAAIL,EAAaK,EAAMM,OAAOC,UAErE,kBAAC,EAAD,CAAOxF,MAAM,WAAWI,KAAK,WAAWD,SAAU,SAAA8E,GAAK,OAAIJ,EAAaI,EAAMM,OAAOC,UAEpFvF,GAAS,yBAAKK,UAAU,sBAAf,gCACV,yBAAKA,UAAU,eACX,4BAAQA,UAAU,kBAAkBmF,QAAST,EACrCU,UAAWJ,GAAiBxE,GAC/BA,GAAkB,0BAAMR,UAAU,qCAFvC,c,wBC3BLqF,EAlBmB,SAAC5F,GAAW,IACnC6F,EAAmB7F,EAAnB6F,MAAMC,EAAa9F,EAAb8F,UAETC,EAAcC,IAKlB,OAHIH,IACAE,EAAc,kBAAoBF,GAGlC,uCAAKI,IAAKH,GAAaC,GAAiB/F,EAAxC,CAA+CkG,IAAI,cACnDC,QAAS,SAACjB,GACNA,EAAMM,OAAOS,IAAID,SCEdI,EAZM,SAACpG,GAAW,IACtB0E,EAAM1E,EAAN0E,KACArC,EAA4BqC,EAA5BrC,SAASgE,EAAmB3B,EAAnB2B,YAAYR,EAAOnB,EAAPmB,MAC5B,OAEI,kBAAC,IAAD,CAAMS,GAAI,UAAU5B,EAAKrC,SAAU9B,UAAU,6DACzC,kBAAC,EAAD,CAA2BA,UAAU,sBAAsBgG,MAAM,OAAOC,OAAO,OAAOX,MAAOA,EAAOK,IAAKxB,EAAKrC,SAAS,YACtHgE,EAFL,IAEkB,0BAAM9F,UAAU,uBAAhB,KAAyC8B,KCCpDoE,EAVA,WACX,OACI,yBAAKlG,UAAU,iCACX,yBAAKA,UAAU,gCACX,0BAAMA,UAAU,WAAhB,iBCgEDmG,EA/DE,WAAO,IAAD,EACK5F,mBAAU,CAC9B6F,QAAS,GACTzE,KAAM,EACN0E,OAAQ,IAJO,mBACZ3E,EADY,KACN4E,EADM,OAMU/F,oBAAS,GANnB,mBAMZgG,EANY,KAMHC,EANG,KAObhG,EAAeL,EAAe,MAAM,mBAC1CO,qBAAW,WACP+F,MACF,IAKF,IAUMA,EAAQ,uCAAG,WAAO/E,GAAP,eAAAoC,EAAA,6DACb0C,GAAY,GADC,kBAGY/E,EAAUC,GAHtB,OAGHJ,EAHG,OAITgF,EAAQhF,EAAS2C,MAJR,gDAMTuC,GAAY,GANH,yDAAH,sDAUEE,EAAsBhF,EAA/B0E,QAAgBO,EAAejF,EAAfiF,KAAMC,EAASlF,EAATkF,MACzBC,EACA,8BACe,IAAVD,GACD,4BAAQ5G,UAAU,mCAAmCmF,QAnBzC,WAChB,IAAM2B,EAAWpF,EAAK2E,OAAS,EAC/BI,EAAUK,KAiBN,cACU,IAATH,GACD,4BAAQ3G,UAAU,mCAAmCmF,QA1BzC,WAChB,IAAM4B,EAAWrF,EAAK2E,OAAS,EAC/BI,EAAUM,KAwBN,aAOR,OAJGvG,IACAqG,EAAU,kBAAC,EAAD,OAIT,yBAAK7G,UAAU,QACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,2BAAd,aACGuG,EAEE,yBAAKvG,UAAU,qCAAqCgH,KAAK,SAAzD,mBAFQN,EAAMO,KAAK,SAAA9C,GAAI,OACxB,kBAAC,EAAD,CAAc+C,IAAK/C,EAAKrC,SAAUqC,KAAMA,QAI3C0C,IC7CFM,G,MAhBS,SAAC,GAAwB,IAAvB7B,EAAsB,EAAtBA,MAAO8B,EAAe,EAAfA,UAC7B,OACI,yBAAKC,MAAO,CAACC,SAAU,YAAatH,UAAU,kBAC1C,yBAAK0F,IAAKJ,EAAOK,IAAI,IAAI3F,UAAU,mBACnC,yBAAKA,UAAU,UAAUqH,MAAO,CAACE,QAAQH,EAAU,EAAE,IACjD,yBAAKpH,UAAU,uCACX,yBAAKA,UAAU,oCACX,0BAAMA,UAAU,WAAhB,oBCgGTwH,EAlGK,WAAO,IAEhBlC,EAASmC,aAAa,SAAAC,GAAK,MAAK,CAACpC,MAAOoC,EAAMpC,UAA9CA,MAFe,EAGQ/E,oBAAU,GAHlB,mBAGfoH,EAHe,KAGNC,EAHM,OAIIrH,mBAAU,IAJd,mBAIfmC,EAJe,KAIRmF,EAJQ,OAKMtH,mBAAU,IALhB,mBAKfuH,EALe,KAKPC,EALO,OAMUxH,qBANV,mBAMfyH,EANe,KAMLC,EANK,OAOkB1H,qBAPlB,mBAOf2H,EAPe,KAODC,EAPC,KAQhB3H,EAAiBL,EAAgB,OAAQ,eAAe,GACxDiI,EAAoBjI,EAAgB,OAAQ,0BAA0B,GAE5EO,qBAAW,WACFiH,IACDE,EAAU,IACVE,EAAW,IACXE,IACAE,OAEL,CAACR,IAEJjH,qBAAW,WACPqH,EAAW,MACZ,CAACrF,IAKJ,IAAM2F,EAAY,uCAAG,4BAAAvE,EAAA,6DACXwE,EAAO,CACTlC,QAAS1D,EACTwF,aAAcA,GAHD,kBAMPzF,EAAW6F,GANJ,OAObV,GAAY,GAPC,gDAST,KAAMtG,SAAS2C,KAAKsE,kBACpBR,EAAW,KAAMzG,SAAS2C,KAAKsE,kBAVtB,yDAAH,qDA0BZC,EAAU,uCAAG,WAAOC,GAAP,iBAAA3E,EAAA,6DACTX,EAAa,IAAIuF,UACZC,OAAQ,OAAQF,GAFZ,SAGQvF,EAAqBC,GAH7B,OAGT7B,EAHS,OAIf6G,EAAiB7G,EAAS2C,KAAKlB,IAJhB,2CAAH,sDAQZ6F,EAAgB,eAIpB,OAHId,EAAO1B,UACPwC,GAAiB,eAGjB,yBAAK5I,UAAU,YACX,yBAAKA,UAAU,wBACX,kBAAC,EAAD,CAA2BA,UAAU,sBAAsBgG,MAAM,OAAOC,OAAO,OAAOX,MAAOA,IAC7F,yBAAKtF,UAAU,aACX,8BAAUA,UAAW4I,EAAeC,QAAS,kBAAMjB,GAAY,IAAQkB,KAAMnB,EAAU,IAAM,IACnFzC,MAAOxC,EACP7C,SAAU,SAAC8E,GAAD,OAAWkD,EAAUlD,EAAMM,OAAOC,UAEtD,yBAAKlF,UAAU,oBAAoB8H,EAAO1B,WAGjDuB,GAAY,qCACPK,GAAY,kBAAC,EAAD,CAAOlI,KAAK,OAAOD,SArCxB,SAAA8E,GACjB,KAAIA,EAAMM,OAAO8D,MAAMC,OAAS,GAAhC,CAEA,IAAMP,EAAO9D,EAAMM,OAAO8D,MAAM,GAC1BE,EAAa,IAAIC,WACvBD,EAAWE,UAAY,WACnBlB,EAAagB,EAAWG,QACxBZ,EAAYC,IAEhBQ,EAAWI,cAAeZ,OA6BjBT,GAAY,kBAAC,EAAD,CAAiB1C,MAAO0C,EAAUZ,UAAWgB,IAC1D,yBAAKpI,UAAU,mBACX,4BAAQA,UAAU,2CAA2CmF,QAASkD,EAC9DjD,SAAU5E,GAAkB4H,GAC/B5H,GAAkB,0BAAMR,UAAU,0CACnC,uBAAGA,UAAU,sBAAsBqH,MAAO,CAACiC,SAAU,SAArD,QAHJ,UAKA,4BAAQtJ,UAAU,sCACVmF,QAAS,kBAAMyC,GAAY,IAC3BxC,SAAU5E,GAAkB4H,GAChC,uBAAGpI,UAAU,kBAAb,SAHJ,c,gBC/DLuJ,EA7BD,SAAC9J,GAAW,IACf+J,EAAqE/J,EAArE+J,QAAQC,EAA6DhK,EAA7DgK,cAAc1E,EAA+CtF,EAA/CsF,QAAQ2E,EAAuCjK,EAAvCiK,UAAUlJ,EAA6Bf,EAA7Be,eAAgBmJ,EAAalK,EAAbkK,YAC3D3J,EAAU,aAMd,OAJGwJ,IACCxJ,GAAa,iBAIb,yBAAKA,UAAWA,EAAWqH,MAAO,CAACuC,gBAAgB,qBAC/C,yBAAK5J,UAAU,gBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAe2J,IAEjC,yBAAK3J,UAAU,cAAc+E,GAC7B,yBAAK/E,UAAU,gBACX,4BAAQA,UAAU,oBAAoBmF,QAASsE,EAAerE,SAAU5E,GAAxE,UACA,4BAAQR,UAAU,kBAAkBmF,QAASuE,EAAWtE,SAAU5E,GAC7DA,GAAkB,0BAAMR,UAAU,0CAClC2J,QCoFdE,EAjGG,SAACpK,GACf,IAAMqK,EAAerC,aAAa,SAAAC,GAAK,OAAIA,EAAM5F,YAC1CY,EAAwBjD,EAAxBiD,MAAOqH,EAAiBtK,EAAjBsK,cACP5F,EAA8DzB,EAA9DyB,KAAMiC,EAAwD1D,EAAxD0D,QAAS4D,EAA+CtH,EAA/CsH,KAAMC,EAAyCvH,EAAzCuH,eAAgBlH,EAAyBL,EAAzBK,GAAImH,EAAqBxH,EAArBwH,UAAWC,EAAUzH,EAAVyH,OACpDrI,EAAgCqC,EAAhCrC,SAAUgE,EAAsB3B,EAAtB2B,YAAaR,EAASnB,EAATmB,MAJL,EAKe/E,oBAAU,GALzB,mBAKlB6J,EALkB,KAKJC,EALI,OAMa9J,mBAAU2J,GANvB,mBAMlBI,EANkB,KAMLC,EANK,OAOKhK,mBAAU4J,GAPf,mBAOlBK,EAPkB,KAOTC,EAPS,KASzB/J,qBAAW,cAER,CAAC4J,IAEJ,IAAM9J,EAAiBL,EAAgB,SAAU,eAAiB4C,GAAI,GAEhE2H,EAAUZ,IAAiBhI,EAE3B6I,EAAY,uCAAG,sBAAA7G,EAAA,sEACXV,EAAaL,GADF,OAEjBgH,EAAehH,GAFE,2CAAH,qDASZ6H,EAAW,uCAAG,sBAAA9G,EAAA,yDACX0G,EADW,gCXmCLjH,EWjCKR,EXkCb7B,IAAMyB,KAAK,eAAeY,GWpCb,OAGZgH,EAAgBD,EAAc,GAC9BG,GAAY,GAJA,uCAMNnH,EAAYP,GANN,OAOZwH,EAAgBD,EAAc,GAC9BG,GAAY,GARA,kCXmCN,IAAClH,IWnCK,OAAH,qDAYXsH,EAAYC,YAAQd,GAC1B,OAAQ,oCACA,yBAAKhK,UAAU,aACX,yBAAKA,UAAU,UACX,kBAAC,EAAD,CAA2BsF,MAAOA,EAAOU,MAAM,KAAKC,OAAO,KAAKjG,UAAU,uBAC1E,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAM+F,GAAE,iBAAYjE,GAAY9B,UAAU,kCACtC,0BAAMA,UAAU,sBAAsB8F,EAAtC,KAAqDhE,GACrD,0BAAM9B,UAAU,gCAAhB,SAAmD6K,KAG1DH,GAAW,4BAAQ1K,UAAU,6BAA6BmF,QAAS,kBAAMkF,GAAiB,KACvF,uBAAGrK,UAAU,kBAAb,oBAGR,yBAAKA,UAAU,aAAaoG,GAC3B6D,GACG,yBAAKjK,UAAU,QACX,yBAAKA,UAAU,YAAY0F,IAAK,sBAAwBuE,EAAerK,KAAM+F,IAAI,QAGzF,yBAAK3F,UAAU,uBACX,yBAAKA,UAAU,OACX,4BAAQA,UAAU,yCAAyCoF,UAAW0E,GAClE,uBAAG9J,UAAU,4BACVqH,MAAO,CAAC0D,MAAO,SADlB,WAEA,0BAAM/K,UAAU,yBAGxB,yBAAKA,UAAU,OACX,4BAAQA,UAAU,yCAAyCoF,UAAW0E,GAClE,uBAAG9J,UAAU,4BACVqH,MAAO,CAAC0D,MAAO,SADlB,aAEA,0BAAM/K,UAAU,yBAGxB,yBAAKA,UAAU,OACX,4BAAQA,UAAU,yCAAyCoF,UAAW0E,EAC9D3E,QAASyF,GACb,uBAAG5K,UAAU,4BACVqH,MAAO,CAAC2D,MAAOR,GAAWV,EAAe,MAAQ,GAAIiB,MAAO,SAD/D,YAEA,0BAAM/K,UAAU,sBAAsBsK,EAAtC,SAMhB,kBAAC,EAAD,CAAOd,QAASY,EAAcX,cAhEhB,WAClBY,GAAiB,IA+D+CX,UAAWiB,EAChEnK,eAAgBA,EAChBuE,QACI,6BACI,6BAAK,kEACL,8BAAOqB,IAEbuD,YAAa,mB,OCcnBsB,EA5GG,WAAO,IAAD,EAEc1K,mBAAU,CAAC6F,QAAS,GAAIO,MAAM,IAF5C,mBAEbuE,EAFa,KAEFC,EAFE,OAGsB5K,mBAAU,GAHhC,mBAGb6K,EAHa,KAGEC,EAHF,KAIbvJ,EAAYwJ,cAAZxJ,SACDe,EAAOf,EAAQ,eAAWA,EAAX,iBAAqC,oBACpDyJ,EAA2BpL,EAAgB,MAAO0C,GAEpD2I,EAAc,EACdC,EAAc,EAClB,GAAIP,EAAU9E,QAAQ4C,OAAS,EAAG,CAC9ByC,EAAcP,EAAU9E,QAAQ,GAAGrD,GACnC,IAAM2I,EAAiBR,EAAU9E,QAAQ4C,OAAS,EAClDwC,EAAcN,EAAU9E,QAAQsF,GAAgB3I,GAEpD,IAAM4I,EAAe7J,EAAQ,eAAWA,EAAX,mBAA8B0J,GAAgB,cAAgBA,EACrFI,EAAwBzL,EAAgB,MAAOwL,GAAc,GAE7DE,EAAa/J,EAAQ,eAAWA,EAAX,mBAA8B2J,EAA9B,0CAA2EA,EAA3E,oBAErBK,EAAwB3L,EAAgB,MAAO0L,GAAc,GAEnEnL,qBAAW,WACP,IAIIqL,EAASC,YAJC,uCAAG,4BAAAlI,EAAA,sEACUd,EAAkByI,EAAa3J,GADzC,OACPR,EADO,OAEb+J,EAAkB/J,EAAS2C,KAAKgI,OAFnB,2CAAH,qDAIqB,MACnC,OAAO,WACHC,cAAeH,MAGpB,CAACN,EAAa3J,IAEjBpB,qBAAW,YACQ,uCAAG,WAAOgB,GAAP,eAAAoC,EAAA,+EAEalB,EAAWd,EAAUJ,GAFlC,OAEJJ,EAFI,OAGV6J,GAAc,SAAAgB,GAAS,kCAChB7K,EAAS2C,MADO,IAEnBmC,QAAQ,GAAD,mBAAM+F,EAAU/F,SAAhB,YAA4B9E,EAAS2C,KAAKmC,eAL3C,uGAAH,sDAUfgG,KACD,CAACtK,IAGJ,IAAMuK,EAAa,uCAAG,4BAAAvI,EAAA,+EAEShB,EAAc0I,EAAa1J,GAFpC,OAERR,EAFQ,OAGd6J,GAAc,SAAAgB,GAAS,kCAChB7K,EAAS2C,MADO,IAEnBmC,QAAQ,GAAD,mBAAM+F,EAAU/F,SAAhB,YAA4B9E,EAAS2C,KAAKmC,eALvC,uGAAH,qDAYbkG,EAAa,uCAAC,4BAAAxI,EAAA,sEACKb,EAAawI,EAAY3J,GAD9B,OACVR,EADU,OAEhB6J,GAAc,SAAAgB,GAAS,kCAChBA,GADgB,IAEnB/F,QAAQ,GAAD,mBAAM9E,EAAS2C,MAAf,YAAuBkI,EAAU/F,eAE5CiF,EAAiB,GAND,2CAAD,qDAUbkB,EAAqB,SAACxJ,GACxBoI,GAAa,SAAAgB,GAAS,kCACfA,GADe,IAElB/F,QAAS+F,EAAU/F,QAAQoG,QAAO,SAAC9J,GAAD,OAASA,EAAMK,KAAKA,WAIvDqD,EAAiB8E,EAAjB9E,QAASO,EAAQuE,EAARvE,KAEhB,OAAuB,IAAnBP,EAAQ4C,OACD,yBAAKhJ,UAAU,qCAAqCuL,EACvD,kBAAC,EAAD,MAAY,mBAIhB,6BACKH,EAAgB,GACjB,yBACIpL,UAAU,yCACVmF,QAAS2G,EAAwB,aAAWQ,EAC5CjF,MAAO,CAACoF,OAAQX,EAAwB,cAAgB,YACvDA,EAAuB,kBAAC,EAAD,MAAW,wBAAwBV,GAG9DhF,EAAQa,KAAK,SAAAvE,GACV,OAAO,kBAAC,EAAD,CAAWwE,IAAKxE,EAAMK,GAAIL,MAAOA,EAAOqH,cAAewC,QAEhE5F,GAAQ,yBAAM3G,UAAU,oCACtBmF,QAASyG,EAAwB,aAC7BS,EACJhF,MAAO,CAACoF,OAAQb,EAAwB,cAAgB,YACvDA,EAAwB,kBAAC,EAAD,MAAY,qBC9EtCc,EAzBE,WAAO,IAEb1K,EAAYyF,aAAY,SAACC,GAAD,MAAU,CAAC1F,WAAW0F,EAAM1F,eAApDA,WACP,OACI,yBAAKhC,UAAU,aAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QACVgC,GAAc,kBAAC,EAAD,OAEf,kBAAC,EAAD,OAER,yBAAKhC,UAAU,iBACX,kBAAC,EAAD,U,QCyDL2M,EAvEQ,SAAClN,GAAW,IA0C3BmN,EA1C0B,EACNrM,mBAAU,CAC9BuB,SAAU,KACVgE,YAAa,KACb/D,SAAU,KACV8K,eAAgB,OALU,mBACvBC,EADuB,KACjBC,EADiB,OAOFxM,mBAAU,IAPR,mBAOvBuH,EAPuB,KAOfC,EAPe,KAQxBlE,EAAWY,cAEX5E,EAAW,SAAA8E,GAAU,IAAD,EACAA,EAAMM,OAArBrF,EADe,EACfA,KAAMsF,EADS,EACTA,MACb6C,GAAW,SAACoE,GAAD,mBAAC,eAAmBA,GAApB,kBAAgCvM,OAAOK,OAClD8M,GAAS,SAACC,GAAD,mBAAC,eAAuBA,GAAxB,kBAAwCpN,EAAOsF,QAGtD+H,EAAa,uCAAG,WAAMtI,GAAN,yBAAAb,EAAA,6DAClBa,EAAMC,iBACCC,EAAWpF,EAAXoF,QACAC,EAAQD,EAARC,KACAhD,EAAmCgL,EAAnChL,SAAUgE,EAAyBgH,EAAzBhH,YAAa/D,EAAY+K,EAAZ/K,SACxBqC,EAAY,CACdtC,WACAgE,cACA/D,YARc,kBAWR8B,EAAUK,EAAeE,IAXjB,OAYdU,EAAM,KAZQ,kDAcV,KAAMxD,SAAS2C,KAAKsE,kBACpBR,EAAW,KAAMzG,SAAS2C,KAAKsE,kBAfrB,0DAAH,sDAqBb2E,EAAuB/M,EAAgB,OAAQ,cAC/CgN,EAAsBhN,EAAgB,OAAQ,aAC9CK,EAAiB0M,GAAwBC,EAC9BC,EAAyEtF,EAAnFhG,SAAsCuL,EAA6CvF,EAA1DhC,YAAyCwH,EAAiBxF,EAA3B/F,SAM/D,OAHI+K,EAAK/K,WAAa+K,EAAKD,iBACvBD,EAAsB,uBAGtB,yBAAK5M,UAAU,yBACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,aAEX,kBAAC,EAAD,CAAON,MAAM,WAAWE,KAAK,WAAWD,MAAOyN,EAAevN,SAAUA,IACxE,kBAAC,EAAD,CAAOH,MAAM,eAAeE,KAAK,cAAcD,MAAO0N,EAAkBxN,SAAUA,IAClF,kBAAC,EAAD,CAAOH,MAAM,WAAWE,KAAK,WAAWD,MAAO2N,EAAezN,SAAUA,EAAUC,KAAK,aACvF,kBAAC,EAAD,CAAOJ,MAAM,kBAAkBE,KAAK,iBAAiBD,MAAOiN,EAAqB/M,SAAUA,EACpFC,KAAK,aACZ,yBAAKE,UAAU,eACX,4BAAQA,UAAU,kBAAkBmF,QAAS8H,EACrC7H,SAAU5E,GAAkBoM,GAC/BpM,GAAkB,0BAAMR,UAAU,qCAFvC,iB,iBCkCTuN,EA3FA,SAAC9N,GAAW,IAAD,EAE6BgI,aAAa,SAACC,GAAD,MAAY,CACxE1F,WAAY0F,EAAM1F,WAClBF,SAAU4F,EAAM5F,SAChBgE,YAAa4B,EAAM5B,YACnBR,MAAOoC,EAAMpC,UAJVxD,EAFe,EAEfA,SAAUE,EAFK,EAELA,WAAY8D,EAFP,EAEOA,YAAaR,EAFpB,EAEoBA,MAMpCkI,EAAWC,iBAAQ,MARH,EASgBlN,oBAAU,GAT1B,mBASfmN,EATe,KASFC,EATE,KAWtBjN,qBAAW,WAEP,OADAkN,SAASC,iBAAkB,QAASC,GAC7B,WACHF,SAASG,oBAAqB,QAASD,MAE5C,CAAC9L,IACJ,IAAM8L,EAAmB,SAACnJ,GACG,OAArB6I,EAASQ,SAAqBR,EAASQ,QAAQC,SAAUtJ,EAAMM,SAC/D0I,GAAgB,IAGlB9J,EAAWY,cAMbyJ,EACA,wBAAIlO,UAAU,sBACV,4BACI,kBAAC,IAAD,CAAMA,UAAU,mCAAmC+F,GAAG,UAClD,uBAAG/F,UAAU,0BAAb,SADJ,UAGJ,4BACI,kBAAC,IAAD,CAAMA,UAAU,0CAA0C+F,GAAG,WACzD,uBAAG/F,UAAU,0BAAb,cADJ,aAKZ,GAAIgC,EAAY,CACZ,IAAImM,EAAgB,2BAChBT,IACAS,GAAiB,SAErBD,EACI,wBAAIlO,UAAU,qBAAqBoO,IAAKZ,GACpC,wBAAIxN,UAAU,qBACV,yBAAKA,UAAU,SAASqH,MAAO,CAACoF,OAAQ,WAAYtH,QAAS,kBAAMwI,GAAgB,KAE/E,kBAAC,EAAD,CAA2B3N,UAAU,wBAAwBsF,MAAOA,EAAOU,MAAM,KAAKC,OAAO,OAC7F,0BAAMjG,UAAU,+CAA+C8F,IAEnE,yBAAK9F,UAAWmO,GAEZ,kBAAC,IAAD,CAAMnO,UAAU,2BAA2B+F,GAAI,UAAYjE,EACrDqD,QAAS,kBAAMwI,GAAgB,KACjC,uBAAG3N,UAAU,iCAAb,UAFJ,cAIA,kBAAC,IAAD,CAAMA,UAAU,2BAA2B+F,GAAG,IAAIZ,QAnC9C,WACpBtB,Ed3BG,CACH/D,KCLoB,qBakEA,uBAAGE,UAAU,mCAAb,sBADJ,cASpB,OACI,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,+CACX,kBAAC,IAAD,CAAMA,UAAU,eAAe+F,GAAG,KAC9B,yBAAKL,IAAK2I,IAAM1I,IAAI,OAAOK,MAAM,MAAMC,OAAO,KAAKjG,UAAU,UAEhEkO,KCgFFI,GArJK,SAAC7O,GAAW,IAAD,EACSc,oBAAU,GADnB,mBACpBgO,EADoB,KACRC,EADQ,OAEyBjO,qBAFzB,mBAEpBgC,EAFoB,KAEAkM,EAFA,KAGVC,EAAoBjH,aAAa,SAACC,GAAD,MAAY,CAAC5F,SAAU4F,EAAM5F,aAAxEA,SAED6M,EADcrD,cACaxJ,SALN,EAMHvB,mBAAU,IANP,mBAMpB4D,EANoB,KAMdyK,EANc,OAOKrO,oBAAU,GAPf,mBAOpBsO,EAPoB,KAOVC,EAPU,OAQKvO,qBARL,mBAQpByH,EARoB,KAQVC,EARU,OASC1H,mBAAU,IATX,mBASpBuH,EAToB,KASZC,EATY,KAUrBlE,EAAWY,cACV3C,EAAgCqC,EAAhCrC,SAAUgE,EAAsB3B,EAAtB2B,YAAaR,EAASnB,EAATmB,MAXH,EAYU/E,oBAAS,GAZnB,mBAYpB6J,EAZoB,KAYPC,EAZO,KAarBxF,EAASkK,cAGfrO,qBAAW,WACPkO,EAASnP,EAAM0E,QAChB,CAAC1E,EAAM0E,OAGVzD,qBAAW,WACPoO,EAAaH,IAAiBD,KAC/B,CAACC,EAAcD,IAIlBhO,qBAAW,WACPqH,GAAW,SAACoE,GAAD,mBAAC,eAAmBA,GAApB,IAA+BrG,iBAAa7F,SACxD,CAACsC,IACJ7B,qBAAW,WACPqH,GAAW,SAACoE,GAAD,mBAAC,eAAmBA,GAApB,IAA+B7G,WAAOrF,SAClD,CAAC+H,IAEJtH,qBAAW,WACF6N,EAIDE,EAAuB3I,IAHvB2I,OAAuBxO,GACvBgI,OAAahI,MAIlB,CAACsO,EAAYzI,IAEhB,IAGMkJ,EAAiB,uCAAC,sBAAAlL,EAAA,sEhBSjB5C,IAAMmC,OAAO,egBTI,OAEpBQ,EfvDG,CACH/D,KCLoB,mBc4DpB+E,EAAQC,KAAK,KACbuF,GAAgB,GAJI,2CAAD,qDAOjB4E,EAAW,uCAAG,gCAAAnL,EAAA,6DACZwB,OAAQrF,EACR+H,IACA1C,EAAQ0C,EAASkH,MAAO,KAAM,IAE5B5G,EAAO,CACTxC,YAAavD,EACb+C,SAPY,kBAUWhD,EAAYR,EAAUwG,GAVjC,OAUNhH,EAVM,OAWZkN,GAAe,GACfI,EAAStN,EAAS2C,MAElBJ,Ef9DF,CACF/D,KChBoB,gBDiBpB4D,QAAQ,CACJoC,aAJe,Ee+DSxE,EAAS2C,Mf/DjB6B,YAKhBR,MALqC,EAATA,SeiDhB,kDAiBZyC,EAAW,KAAMzG,SAAS2C,KAAKsE,kBAjBnB,kCfjDE,IAAC,IeiDH,qBAAH,qDAmCX/H,EAAiBL,EAAgB,MAAO,cAAgB2B,GACxDqN,EAAwBhP,EAAe,SAAS,cAEtD,OACI,oCACI,yBAAKH,UAAU,oBACX,yBAAKA,UAAU,eACX,kBAAC,EAAD,CAA2BA,UAAU,wBAAwBsF,MAAOA,EAAOC,UAAWyC,EAC3DrC,IAAKxB,EAAKrC,SAAW,kBAAmBkE,MAAM,QAAQC,OAAO,WAI5F,yBAAKjG,UAAU,aAAY,4BAAK8F,EAAL,IAAkB,0BAAM9F,UAAU,uBAAhB,IAAwC8B,KAE9EyM,GAAcM,GAAa,oCAC1B,4BAAQ7O,UAAU,gCAAgCmF,QAAS,kBAAMqJ,GAAe,KAC5E,uBAAGxO,UAAU,kBAAb,QADJ,QAGA,8BACA,4BAAQA,UAAU,wCAAwCmF,QAAS,kBAAIkF,GAAgB,KACnF,uBAAGrK,UAAU,kBAAb,kBADJ,uBAKHuO,GAAc,wCAAG,kBAAC,EAAD,CAAO7O,MAAM,2BAA2BK,aAAc+F,EAC/CnG,MAAOmI,EAAOhC,YAAajG,SAAU,SAAC8E,GAC3D8J,EAAuB9J,EAAMM,OAAOC,UAIpC,kBAAC,EAAD,CAAOlF,UAAU,oBAAoBF,KAAK,OAAOD,SA3ChD,SAAA8E,GAEjB,KAAIA,EAAMM,OAAO8D,MAAMC,OAAS,GAAhC,CAEA,IAAMP,EAAO9D,EAAMM,OAAO8D,MAAM,GAC1BE,EAAa,IAAIC,WACvBD,EAAWE,UAAY,WAEnBlB,EAAagB,EAAWG,SAE5BH,EAAWI,cAAeZ,KAiC+D9I,MAAOmI,EAAOxC,QAEvF,4BAAQtF,UAAU,4CACVmF,QAAS8J,EAAa7J,SAAU5E,GACnCA,EAAiB,0BAAMR,UAAU,wDAC9B,uBAAGA,UAAU,kBAAb,QAHR,SAKA,4BAAQA,UAAU,sCACVmF,QAAS,kBAAMqJ,GAAe,IAASpJ,SAAU5E,GACrD,uBAAGR,UAAU,kBAAb,SAFJ,aAUZ,kBAAC,EAAD,CAAOwJ,QAASY,EAAcX,cA5FlB,WAChBY,GAAgB,IA4FLX,UAAWsF,EAAmBrF,YAAW,oBACzC5E,QAAS,sCACTvE,eAAgB2O,MC5FpBC,GAnDE,SAAC3P,GAAW,IAAD,EACAc,mBAAS,IADT,mBACjB4D,EADiB,KACXyK,EADW,OAEQrO,oBAAU,GAFlB,mBAEjB8O,EAFiB,KAEPC,EAFO,KAGlBxN,EAAWrC,EAAM8P,MAAMC,OAAO1N,SAC9BtB,EAAeL,EAAe,MAAM,cAAc2B,GAAS,GAiBjE,OAfApB,qBAAW,YACO,uCAAG,4BAAAoD,EAAA,+EAEczB,EAASP,GAFvB,OAEHR,EAFG,OAGTsN,EAAStN,EAAS2C,MAClBqL,GAAa,GAJJ,gDAMTA,GAAa,GANJ,yDAAH,qDASd7I,KACD,CAAC3E,IAIAuN,EAEI,yBAAKrP,UAAU,sCACX,uBAAGA,UAAU,yBAAyBqH,MAAO,CAACiC,SAAU,SAAxD,SADJ,oBAML9I,GAAkB2D,EAAKrC,WAAWA,EAC1B,kBAAC,EAAD,MAIP,yBAAK9B,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAamE,KAAMA,KAEvB,yBAAKnE,UAAU,OACX,kBAAC,EAAD,UCbLyP,OAzBf,WAAiB,IACFzN,EAAYyF,aAAY,SAACC,GAAD,MAAU,CAAC1F,WAAW0F,EAAM1F,eAApDA,WAEP,OACI,kBAAC,IAAD,UACI,kBAAC,EAAD,MACA,kBAAC,IAAD,MACMA,GAAe,kBAAC,IAAD,CAAOa,KAAK,SAAS6M,UAAWrL,IAEjD,kBAAC,IAAD,CAAOsL,OAAK,EAAC9M,KAAK,IAAI6M,UAAWhD,IACjC,kBAAC,IAAD,CAAO7J,KAAK,UAAU6M,UAAW/C,IACjC,kBAAC,IAAD,CAAO9J,KAAK,mBAAmB6M,UAAWN,KAC1C,kBAAC,IAAD,CAAUrJ,GAAG,SCTb6J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASR,MACvB,2D,aChBAS,GAAa,CACfhO,YAAW,EACXF,cAAS7B,EACT6F,iBAAY7F,EACZqF,WAAMrF,EACN8B,cAAS9B,GAuBEgQ,GApBG,WAAmC,IAAlCC,EAAiC,sEAAvBF,IAAcG,EAAS,uCAChD,MlBVwB,mBkBUrBA,EAAOrQ,KACCkQ,GlBZY,kBkBafG,EAAOrQ,KACR,2BACIqQ,EAAOzM,SADlB,IAEQ1B,YAAW,IlBdK,kBkBgBfmO,EAAOrQ,KACT,2BACAoQ,GADP,IAEIpK,YAAYqK,EAAOzM,QAAQoC,YAC3BR,MAAM6K,EAAOzM,QAAQ4B,QAKlB4K,G,6BCrBLE,GAAW,IAAIC,KCMf3I,GDaiB,WACnB,IAAM4I,EAlBkB,WACxB,IAAMC,EAAWH,GAASxO,IAAK,QAC3B4O,EAAsB,CACtBxO,YAAY,EACZF,cAAU7B,EACV6F,iBAAa7F,EACbqF,WAAOrF,EACP8B,cAAU9B,GAId,OAFIsQ,IACAC,EAAsBD,GACnBC,EAOcC,GACrB5O,EAAwByO,GACxB,IAAM5I,EAAQgJ,aAAaT,GAAaK,EAAcK,aAAiBC,OAKvE,OAJAlJ,EAAMmJ,WAAW,WARQ,IAAAC,IASCpJ,EAAMqJ,WARhCX,GAASY,IAAK,OAAQF,GASlBjP,EAAwB6F,EAAMqJ,eAE3BrJ,ECrBCuJ,GAEZC,IAASC,OACL,kBAAC,IAAD,CAAUzJ,MAAOA,IACb,kBAAC,GAAD,OAENkG,SAASwD,eAAe,SHiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhS,GACLiS,QAAQjS,MAAMA,EAAMoF,c","file":"static/js/main.d1331fc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultPictureBig.926fda93.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6c5c11b9.PNG\";","import React from \"react\";\r\n\r\nconst Input = (props) => {\r\n    const {label, error, name, onChange, type, defaultValue} = props;\r\n    let className = \"form-control\";\r\n    if (type === \"file\")\r\n        className += \"-file\";\r\n    if(error!==undefined)\r\n        className+=\" is-invalid\";\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>{label}</label>\r\n            <input className={className} type={type} name={name} defaultValue={defaultValue}\r\n                   onChange={onChange}\r\n                    autoComplete=\"off\"\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n                {error}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Input;","import {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n    const [pendingApiCall, setPendingApiCall] = useState( false );\r\n\r\n    useEffect( () => {\r\n        let requestInterceptor, responseInterceptor;\r\n\r\n        const updateApiCallFor = (method, url, inProgress) => {\r\n            if (method !== apiMethod) {\r\n                return;\r\n            }\r\n            if (strictPath && url === apiPath) {\r\n                setPendingApiCall( inProgress );\r\n            } else if (!strictPath && url.startsWith( apiPath )) {\r\n                setPendingApiCall( inProgress );\r\n            }\r\n        };\r\n\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use( request => {\r\n                const {url, method} = request;\r\n                updateApiCallFor( method, url, true );\r\n                return request;\r\n            } );\r\n\r\n            responseInterceptor = axios.interceptors.response.use(\r\n                response => {\r\n                    const {url, method} = response.config;\r\n                    updateApiCallFor( method, url, false );\r\n                    return response;\r\n                },\r\n                error => {\r\n                    const {url, method} = error.config;\r\n                    updateApiCallFor( method, url, false );\r\n                    throw error;\r\n                }\r\n            );\r\n        };\r\n\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject( requestInterceptor );\r\n            axios.interceptors.response.eject( responseInterceptor );\r\n        };\r\n\r\n        registerInterceptors();\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        };\r\n    }, [apiPath, apiMethod, strictPath] );\r\n\r\n    return pendingApiCall;\r\n};\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const singUp = (addedUser) => {\r\n    return axios.post( \"/api/users\", addedUser, {headers: {\"accept-language\": 'en'}} );\r\n}\r\n\r\nexport const login = (creds) => {\r\n    return axios.post( \"/api/auth\", {}, {auth: creds} )\r\n};\r\n\r\nexport const getUsers = (page = 0, size = 3) => {\r\n    return axios.get( `/api/users?page=${page}&size=${size}` );\r\n};\r\n\r\nexport const setAuthorizationHeader = ({username, password, isLoggedIn}) => { // Login olan kullanıcının userlist de gözükmemesi için\r\n    if (isLoggedIn) {\r\n        const authorizationHeaderValue = `Basic ${btoa( username + \":\" + password )}`; // base64 e çeviriyoruz;\r\n        axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n    } else\r\n        delete axios.defaults.headers['Authorization'];\r\n};\r\n\r\nexport const getUser = username => {\r\n    return axios.get( `/api/users/${username}` );\r\n    //  return axios.get(\"/api/users/\"+username);\r\n}\r\n\r\nexport const updateUser=(username,updatedDisplayName)=>{\r\n    return axios.put(`/api/users/${username}`,updatedDisplayName,{headers: {\"accept-language\": 'en'}});\r\n}\r\n\r\nexport const postTweet=(tweet)=>{\r\n    return axios.post(\"/api/tweets\",tweet)\r\n\r\n}\r\n\r\nexport const getTweets=(username,page)=>{\r\n    const path=username ? `/api/${username}/tweets?page=`: \"/api/tweets?page=\";\r\n    return axios.get(path+page);\r\n}\r\n\r\nexport const getOldTweets=(id,username)=>{\r\n    const path=username ? `/api/${username}/tweets/${id}`:\"api/tweets/\"+id\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewTweetCount=(id,username)=>{\r\n    const path=username ? `/api/${username}/tweets/${id}?count=true`: `/api/tweets/${id}?count=true`\r\n    return axios.get(path);\r\n}\r\n\r\n\r\n\r\nexport const getNewTweets=(id,username)=>{\r\n    const path=username ? `/api/${username}/tweets/${id}?direction=after`:`/api/tweets/${id}?direction=after`\r\n    return axios.get( path)\r\n}\r\n\r\nexport const postTweetAttachment=(attachment)=>{\r\n    return axios.post(\"/api/tweet-attachments\",attachment);\r\n\r\n}\r\n\r\nexport const deleteTweet=id=>{\r\n    return axios.delete(\"/api/tweets/\"+id)\r\n}\r\nexport const deleteUser=()=>{\r\n    return axios.delete(\"/api/users/\");\r\n}\r\n\r\nexport const like=(tweetId)=>{\r\n    return axios.post(\"/api/tweets/\"+tweetId);\r\n}\r\nexport const deleteLike=(tweetId)=>{\r\n    return axios.delete(\"/api/tweets/delete/\"+tweetId);\r\n}\r\n\r\n","import * as ACTIONS from \"./Constants\";\r\nimport {login,singUp} from \"../Api/ApiCalls\";\r\n\r\n\r\nexport const logoutSuccess=()=>{\r\n    return {\r\n        type:ACTIONS.LOGOUT_SUCCESS\r\n    }\r\n}\r\nexport const loginSuccess=authState=>{\r\n    return {\r\n        type:ACTIONS.LOGIN_SUCCESS,\r\n        payload:authState\r\n    }\r\n}\r\n\r\nexport const updateSucces=({displayName,image})=>{\r\n    return{\r\n        type:ACTIONS.UPDATE_SUCCESS,\r\n        payload:{\r\n            displayName,\r\n            image\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginHandler=(credentials)=>{\r\n    return async function (dispatch) {\r\n        const response = await login(credentials);\r\n        const authState = {\r\n            ...response.data,\r\n            password:credentials.password\r\n        };\r\n        dispatch(loginSuccess(authState))\r\n        return response;\r\n    }\r\n}\r\n\r\nexport const singupHandler=(user)=>{\r\n    return async function(dispatch){\r\n        const response= await singUp(user);\r\n        await dispatch(loginHandler(user))\r\n        return response;\r\n    }\r\n}","export const LOGIN_SUCCESS=\"Login-Success\";\r\nexport const LOGOUT_SUCCESS=\"Logout-Success\";\r\nexport const UPDATE_SUCCESS=\"Update-Succes\";","import React, {useEffect, useState} from 'react';\r\nimport Input from \"../components/Input\";\r\nimport {useApiProgress} from \"../Shared/ApiProgress\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginHandler} from \"../Redux/authAction\";\r\n\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const dispatch=useDispatch()    // hooks la gelen özellik dispatch i hooks dan alıyoruz.\r\n\r\n    useEffect(()=>{             // username veya password de bir değişiklik olursa error= undefined yap\r\n        setError(undefined)\r\n    },[username,password])\r\n\r\n    const onClickLogin = async event => {\r\n        event.preventDefault();\r\n        const creds = {\r\n            username,\r\n            password\r\n        };\r\n\r\n        const {history, } = props;\r\n        const {push} = history;\r\n\r\n        setError( undefined )\r\n        try {\r\n            await dispatch( loginHandler( creds ) )\r\n            push( '/' );\r\n        } catch (apiError) {\r\n            setError( apiError.response.data.message )\r\n        }\r\n    };\r\n    const pendingApiCall = useApiProgress(\"post\",\"/api/auth\")\r\n    const buttonEnabled = username && password;\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h1 className=\"text-center\">Login</h1>\r\n            <form>\r\n                <Input label=\"Username\" onChange={event => setUsername( event.target.value)}\r\n                />\r\n                <Input label=\"password\" type=\"password\" onChange={event => setPassword( event.target.value )}/>\r\n\r\n                {error && <div className=\"alert alert-danger\">! Username or password wrong</div>}\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary\" onClick={onClickLogin}\r\n                            disabled={!buttonEnabled || pendingApiCall}>\r\n                        {pendingApiCall && <span className=\"spinner-border spinner-border-sm\"/>} Login\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default  LoginPage;\r\n\r\n","import React from 'react';\r\nimport defaultPicture from \"../img/defaultPictureBig.png\"\r\n\r\nconst ProfilePictureWithDefault = (props) => {\r\n    const {image,tempimage} = props\r\n\r\n    let imageSource = defaultPicture;\r\n\r\n    if (image) {\r\n        imageSource = 'images/profile/' + image;\r\n    }\r\n    return (\r\n        <img src={tempimage || imageSource} {...props} alt=\"profile-pic\"\r\n        onError={(event)=>{\r\n            event.target.src=defaultPicture;\r\n        }}\r\n        >\r\n        </img>\r\n    );\r\n};\r\n\r\nexport default ProfilePictureWithDefault;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport ProfilePictureWithDefault from \"./ProfilePictureWithDefault\";\r\n\r\nconst UserListItem = (props) => {\r\n    const {user}=props\r\n    const {username,displayName,image}=user\r\n    return (\r\n\r\n        <Link to={\"/users/\"+user.username} className=\"list-group-item list-group-item-action font-weight-bolder\">\r\n            <ProfilePictureWithDefault className=\"rounded-circle mr-2\" width=\"35px\" height=\"35px\" image={image} alt={user.username+\"profile\"}/>\r\n            {displayName} <span className=\"font-weight-lighter\"> @{username}</span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default UserListItem;","import React from 'react';\r\n\r\nconst Spiner = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-black-50\" >\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spiner;","import React, {useEffect, useState} from 'react';\r\nimport {getUsers} from \"../Api/ApiCalls\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport {useApiProgress} from \"../Shared/ApiProgress\";\r\nimport Spiner from \"./Spiner\";\r\n//import {useSelector} from \"react-redux\";\r\n\r\nconst UserList = () => {\r\n    const [page, setPage] = useState( {\r\n        content: [],                                // api den gelen userlar contect içinde\r\n        size: 5,\r\n        number: 0\r\n    } )\r\n    const [loadFail,setLoadFail]=useState(false);\r\n    const pendingApiCall=useApiProgress(\"get\",\"/api/users?page\");\r\n    useEffect( ()=>{\r\n        loadUser();\r\n    },[]);\r\n\r\n\r\n\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadUser( nextPage );\r\n\r\n    }\r\n    const onClickPrev = () => {\r\n        const prevPage = page.number - 1;\r\n        loadUser( prevPage );\r\n    }\r\n\r\n    const loadUser = async (page) => {\r\n        setLoadFail(false);\r\n        try{\r\n            const response=await getUsers( page );\r\n            setPage(response.data)\r\n        }catch(error){\r\n            setLoadFail(true);\r\n        }\r\n    };\r\n\r\n    const {content: users, last, first} = page\r\n    let actionDiv=(\r\n        <div>\r\n            {first === false &&\r\n            <button className=\"btn btn-light btn-sm float-left \" onClick={onClickPrev}>Previous </button>}\r\n            {last === false &&\r\n            <button className=\"btn btn-light btn-sm float-right\" onClick={onClickNext}> Next > </button>}\r\n        </div>\r\n    )\r\n    if(pendingApiCall){\r\n       actionDiv=<Spiner/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"list-group-flush\">\r\n                <h4 className=\"card-header text-center\">User List</h4>\r\n                { !loadFail? users.map( user => (\r\n                    <UserListItem key={user.username} user={user}/>\r\n                ) ): <div className=\"alert alert-danger m-5 text-center\" role=\"alert\">Loading Error !</div>\r\n                }\r\n            </div>\r\n                {actionDiv}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport \"./AutoUploadImage.css\"\r\n\r\nconst AutoUploadImage = ({image, uploading}) => {\r\n    return (\r\n        <div style={{position: \"relative\"}} className=\"pl-4 pr-4 mt-2\">\r\n            <img src={image} alt=\"-\" className=\"img-thumbnail \"/>\r\n            <div className=\"overlay\" style={{opacity:uploading?1:0}}>\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                    <div className=\"spinner-border text-light m-auto\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoUploadImage;","import React, {useEffect, useState} from 'react';\r\nimport ProfilePictureWithDefault from \"./ProfilePictureWithDefault\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {postTweet, postTweetAttachment} from \"../Api/ApiCalls\";\r\nimport {useApiProgress} from \"../Shared/ApiProgress\";\r\nimport Input from \"./Input\";\r\nimport AutoUploadImage from \"./AutoUploadImage\";\r\n\r\nconst TweetSubmit = () => {\r\n\r\n    const {image} = useSelector( store => ({image: store.image}) )\r\n    const [focused, setFocused] = useState( false )\r\n    const [tweet, setTweet] = useState( \"\" )\r\n    const [errors, setErrors] = useState( {} );\r\n    const [newImage, setNewImage] = useState();\r\n    const [attachmentId, setAttachmentId] = useState();\r\n    const pendingApiCall = useApiProgress( \"post\", \"/api/tweets\", true );\r\n    const pendingFileUpload = useApiProgress( \"post\", \"/api/tweet-attachments\", true );\r\n\r\n    useEffect( () => {\r\n        if (!focused) {\r\n            setTweet( \"\" );\r\n            setErrors( {} );\r\n            setNewImage();\r\n            setAttachmentId();\r\n        }\r\n    }, [focused] )\r\n\r\n    useEffect( () => {\r\n        setErrors( {} )\r\n    }, [tweet] )\r\n\r\n\r\n\r\n\r\n    const onClikcTweet = async () => {\r\n        const body = {\r\n            content: tweet,\r\n            attachmentId: attachmentId\r\n        }\r\n        try {\r\n            await postTweet( body )\r\n            setFocused( false );\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setErrors( error.response.data.validationErrors )\r\n            }\r\n        }\r\n    }\r\n    const onChangeFile = event => {\r\n        if (event.target.files.length < 1)\r\n            return;\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage( fileReader.result );\r\n            uploadFile( file )\r\n        };\r\n        fileReader.readAsDataURL( file );\r\n    };\r\n\r\n    const uploadFile = async (file) => {\r\n        const attachment = new FormData();\r\n        attachment.append( \"file\", file );\r\n        const response = await postTweetAttachment( attachment );\r\n        setAttachmentId( response.data.id )\r\n    }\r\n\r\n\r\n    let textAreaClass = \"form-control\"\r\n    if (errors.content)\r\n        textAreaClass += \" is-invalid\"\r\n\r\n    return (\r\n        <div className=\"card p-2\">\r\n            <div className=\"d-flex flex-row mt-2\">\r\n                <ProfilePictureWithDefault className=\"rounded-circle mr-2\" width=\"32px\" height=\"32px\" image={image}/>\r\n                <div className=\"flex-fill\">\r\n                    <textarea className={textAreaClass} onFocus={() => setFocused( true )} rows={focused ? \"3\" : \"1\"}\r\n                              value={tweet}\r\n                              onChange={(event) => setTweet( event.target.value )}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.content}</div>\r\n                </div>\r\n            </div>\r\n            {focused && (<>\r\n                {!newImage && <Input type=\"file\" onChange={onChangeFile}/>}\r\n                {newImage && <AutoUploadImage image={newImage} uploading={pendingFileUpload}/>}\r\n                <div className=\"text-right mt-1\">\r\n                    <button className=\"btn btn-primary m-2 d-inline-flex btn-sm\" onClick={onClikcTweet}\r\n                            disabled={pendingApiCall || pendingFileUpload}>\r\n                        {pendingApiCall && <span className=\"spinner-border spinner-border-sm mr-1\"/>}\r\n                        <i className=\"material-icons mr-1\" style={{fontSize: \"21px\"}}>send</i>Submit\r\n                    </button>\r\n                    <button className=\"btn btn-danger btn-sm d-inline-flex\"\r\n                            onClick={() => setFocused( false )}\r\n                            disabled={pendingApiCall || pendingFileUpload}>\r\n                        <i className=\"material-icons\">close</i>Cancel\r\n                    </button>\r\n\r\n                </div>\r\n            </>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TweetSubmit;","import React from 'react';\r\n\r\nconst Modal = (props) => {\r\n    const {visible,onClickCancel,message,onClickOk,pendingApiCall, modalTittle}=props;\r\n    let className=\"modal fade\";\r\n\r\n    if(visible) {\r\n        className += \" show d-block\";\r\n    }\r\n\r\n    return (\r\n        <div className={className} style={{backgroundColor:\"rgba(0,0,0,0.69)\"}}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">{modalTittle}</h5>\r\n                    </div>\r\n                    <div className=\"modal-body\">{message}</div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"btn btn-secondary\" onClick={onClickCancel} disabled={pendingApiCall}>Cancel</button>\r\n                        <button className=\"btn btn-primary\" onClick={onClickOk} disabled={pendingApiCall}>\r\n                            {pendingApiCall && <span className=\"spinner-border spinner-border-sm mr-1\"/>}\r\n                            {modalTittle}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {useEffect, useState} from 'react';\r\nimport ProfilePictureWithDefault from \"./ProfilePictureWithDefault\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {format} from \"timeago.js\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {deleteLike, deleteTweet, like} from \"../Api/ApiCalls\";\r\nimport Modal from \"./Modal\";\r\nimport {useApiProgress} from \"../Shared/ApiProgress\";\r\n\r\nconst TweetView = (props) => {\r\n    const loggedInUser = useSelector( store => store.username )\r\n    const {tweet, onDeleteTweet} = props;\r\n    const {user, content, date, fileAttachment, id, likeCount, iliked} = tweet\r\n    const {username, displayName, image} = user\r\n    const [modalVisible, setModalVisible] = useState( false );\r\n    const [likeCountUI, setLikecountUI] = useState( likeCount );\r\n    const [isliked, setIsLiked] = useState( iliked );\r\n\r\n    useEffect( () => {\r\n\r\n    }, [likeCountUI] )\r\n\r\n    const pendingApiCall = useApiProgress( \"delete\", \"/api/tweets/\" + id, true );\r\n\r\n    const isOwned = loggedInUser === username;\r\n\r\n    const onClikdelete = async () => {\r\n        await deleteTweet( id );\r\n        onDeleteTweet( id );\r\n    }\r\n    const onClickCancel = () => {\r\n        setModalVisible( false )\r\n    }\r\n\r\n\r\n    const onClickLike = async () => {\r\n        if (!isliked) {\r\n            await like( id );\r\n            setLikecountUI( likeCountUI + 1 );\r\n            setIsLiked( true );\r\n        } else {\r\n            await deleteLike( id )\r\n            setLikecountUI( likeCountUI - 1 )\r\n            setIsLiked( false );\r\n        }\r\n    }\r\n\r\n    const formetted = format( date )\r\n    return (<>\r\n            <div className=\"card mb-2\">\r\n                <div className=\"d-flex\">\r\n                    <ProfilePictureWithDefault image={image} width=\"52\" height=\"52\" className=\"rounded-circle p-1\"/>\r\n                    <div className=\"flex-fill mt-2 pl-2\">\r\n                        <Link to={`/users/${username}`} className=\"text-decoration-none text-dark\">\r\n                            <span className=\"font-weight-bolder\">{displayName} @{username}</span>\r\n                            <span className=\"text-muted font-weight-light\"> · {formetted}</span>\r\n                        </Link>\r\n                    </div>\r\n                    {isOwned && <button className=\"btn btn-sm btn-delete-link\" onClick={() => setModalVisible( true )}>\r\n                        <i className=\"material-icons\">delete_outline</i>\r\n                    </button>}\r\n                </div>\r\n                <div className=\"pl-3 mt-1\">{content}</div>\r\n                {fileAttachment && (\r\n                    <div className=\"pl-3\">\r\n                        <img className=\"img-fluid\" src={\"images/attachments/\" + fileAttachment.name} alt=\"--\"/>\r\n                    </div>\r\n                )}\r\n                <div className=\"row text-center m-2\">\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-sm btn-like-link d-inline-flex\" disabled={!loggedInUser}>\r\n                            <i className=\"material-icons icon-hover\"\r\n                               style={{hover: \"none\"}}>comment</i>\r\n                            <span className=\"ml-1 text-black-50\"></span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-sm btn-like-link d-inline-flex\" disabled={!loggedInUser}>\r\n                            <i className=\"material-icons icon-hover\"\r\n                               style={{hover: \"none\"}}>swap_vert</i>\r\n                            <span className=\"ml-1 text-black-50\"></span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-sm btn-like-link d-inline-flex\" disabled={!loggedInUser}\r\n                                onClick={onClickLike}>\r\n                            <i className=\"material-icons icon-hover\"\r\n                               style={{color: isliked && loggedInUser ? \"red\" : \"\", hover: \"none\"}}>favorite</i>\r\n                            <span className=\"ml-1 text-black-50\">{likeCountUI} </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal visible={modalVisible} onClickCancel={onClickCancel} onClickOk={onClikdelete}\r\n                   pendingApiCall={pendingApiCall}\r\n                   message={\r\n                       <div>\r\n                           <div><strong>Are you sure to delete tweet?</strong></div>\r\n                           <span>{content}</span>\r\n                       </div>\r\n                   } modalTittle={\"Delete Tweet\"}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TweetView;","import React, {useEffect, useState,} from 'react';\r\nimport {getNewTweetCount, getNewTweets, getOldTweets, getTweets} from \"../Api/ApiCalls\";\r\nimport TweetView from \"./TweetView\";\r\nimport {useApiProgress} from \"../Shared/ApiProgress\";\r\nimport Spiner from \"./Spiner\";\r\nimport {useParams} from \"react-router-dom\"\r\n\r\nconst TweetFeed = () => {\r\n\r\n    const [tweetPage, setTweetPage] = useState( {content: [], last: true} );\r\n    const [newTweetCount, setNewTweetCount] = useState( 0 );\r\n    const {username} = useParams();\r\n    const path = username ? `/api/${username}/tweets?page=` : \"/api/tweets?page=\";\r\n    const ınıtialTweetLoadProgress = useApiProgress( \"get\", path )\r\n\r\n    let lastTweetId = 0\r\n    let firsTweetId = 0;\r\n    if (tweetPage.content.length > 0) {\r\n        firsTweetId = tweetPage.content[0].id;\r\n        const lastTweetIndex = tweetPage.content.length - 1;\r\n        lastTweetId = tweetPage.content[lastTweetIndex].id;\r\n    }\r\n    const oldTweetPath = username ? `/api/${username}/tweets/${lastTweetId}` : \"api/tweets/\" + lastTweetId\r\n    const loadOldTweetsProgress = useApiProgress( \"get\", oldTweetPath, true );\r\n\r\n    const newTweetPath=username ? `/api/${username}/tweets/${firsTweetId}?direction=after`:`/api/tweets/${firsTweetId}?direction=after`;\r\n\r\n    const loadNewTweetsProgress = useApiProgress( \"get\", newTweetPath, true );\r\n\r\n    useEffect( () => {\r\n        const getCount = async () => {\r\n            const response = await getNewTweetCount( firsTweetId, username );\r\n            setNewTweetCount( response.data.count );\r\n        }\r\n        let looper = setInterval( getCount,2500 );\r\n        return function cleanUp() {\r\n            clearInterval( looper );\r\n        }\r\n\r\n    }, [firsTweetId, username] )\r\n\r\n    useEffect( () => {\r\n        const loadTweet = async (page) => {\r\n            try {\r\n                const response = await getTweets( username, page );\r\n                setTweetPage( prevState => ({\r\n                    ...response.data,\r\n                    content: [...prevState.content, ...response.data.content]\r\n                }) ); // eski tweetler yükleninc arraye ekleme yapıyoruz\r\n            } catch (error) {\r\n            }\r\n        }\r\n        loadTweet();\r\n    }, [username] )\r\n\r\n\r\n    const loadOldTweets = async () => {\r\n        try {\r\n            const response = await getOldTweets( lastTweetId, username );\r\n            setTweetPage( prevState => ({\r\n                ...response.data,\r\n                content: [...prevState.content, ...response.data.content]\r\n            }) );\r\n\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    const loadNewTweets=async ()=>{\r\n        const response=await getNewTweets(firsTweetId,username);\r\n        setTweetPage( prevState => ({\r\n            ...prevState,\r\n            content: [...response.data,...prevState.content]\r\n        }) );\r\n        setNewTweetCount(0);\r\n\r\n    }\r\n\r\n    const onDeleteTweetSucces =(id)=>{\r\n        setTweetPage(prevState => ({\r\n            ...prevState,\r\n            content: prevState.content.filter((tweet)=>tweet.id!==id)\r\n        }))\r\n    }\r\n\r\n    const {content, last} = tweetPage;\r\n\r\n    if (content.length === 0) {\r\n        return <div className=\"alert alert-secondary text-center\">{ınıtialTweetLoadProgress ?\r\n            <Spiner/> : 'Load old tweets'}</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {newTweetCount > 0 &&\r\n            <div\r\n                className=\"alert alert-secondary text-center mb-1\"\r\n                onClick={loadNewTweetsProgress ? () => {} : loadNewTweets}\r\n                style={{cursor: loadNewTweetsProgress ? \"not-allowed\" : \"pointer\"}}>\r\n                {loadNewTweetsProgress ?<Spiner/> :\"There are new tweets \"+newTweetCount}\r\n            </div>\r\n            }\r\n            {content.map( tweet => {\r\n                return <TweetView key={tweet.id} tweet={tweet} onDeleteTweet={onDeleteTweetSucces}/>\r\n            } )}\r\n            {!last && <div  className=\"alert alert-secondary text-center\"\r\n                onClick={loadOldTweetsProgress ? () => {\r\n                } : loadOldTweets}\r\n                style={{cursor: loadOldTweetsProgress ? \"not-allowed\" : \"pointer\"}}>\r\n                {loadOldTweetsProgress ? <Spiner/> : \"Load old tweets\"}\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TweetFeed;","import React from 'react';\r\nimport UserList from \"../components/UserList\";\r\nimport TweetSubmit from \"../components/TweetSubmit\";\r\nimport TweetFeed from \"../components/TweetFeed\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst HomePage = () => {\r\n\r\n    const {isLoggedIn}=useSelector((store)=>({isLoggedIn:store.isLoggedIn}))\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"mb-2\">\r\n                        {isLoggedIn && <TweetSubmit/>}\r\n                    </div>\r\n                        <TweetFeed/>\r\n                </div>\r\n                <div className=\"col-4 ml-auto\">\r\n                    <UserList/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React, {useState} from 'react';\r\nimport Input from \"../components/Input\";\r\nimport {useApiProgress} from \"../Shared/ApiProgress\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {singupHandler} from \"../Redux/authAction\";\r\n\r\nconst UserSingupPage = (props) => {\r\n    const [form, setForm] = useState( {\r\n        username: null,\r\n        displayName: null,\r\n        password: null,\r\n        passwordRepeat: null\r\n    } )\r\n    const [errors, setErrors] = useState( {} )\r\n    const dispatch = useDispatch()     // hooks la gelen özellik. Dispatch i hooksdan alıyoruz\r\n\r\n    const onChange = event => {\r\n        const {name, value} = event.target\r\n        setErrors( (prevState) => ({...prevState, [name]: undefined}) )\r\n        setForm( (previousState) => ({...previousState, [name]: value}) )\r\n    };\r\n\r\n    const onClickSingUp = async event => {\r\n        event.preventDefault();\r\n        const {history} = props;\r\n        const {push} = history;\r\n        const {username, displayName, password} = form;\r\n        const addedUser = {\r\n            username,\r\n            displayName,\r\n            password\r\n        }\r\n        try {\r\n            await dispatch( singupHandler( addedUser ) );\r\n            push( \"/\" );\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setErrors( error.response.data.validationErrors )\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const pendingApiCallSignup = useApiProgress( \"post\", \"/api/users\" );\r\n    const pendingApiCallLogin = useApiProgress( \"post\", \"/api/auth\" );\r\n    const pendingApiCall = pendingApiCallSignup && pendingApiCallLogin;\r\n    const {username: usernameError, displayName: displayNameError, password: passwordError} = errors;\r\n\r\n    let passwordRepeatError;\r\n    if (form.password !== form.passwordRepeat)\r\n        passwordRepeatError = 'Passwords not match';\r\n\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <div className=\"card\">\r\n                <h1 className=\"card-header text-center\">Sing Up</h1>\r\n                <div className=\"card-body\">\r\n\r\n                    <Input label=\"Username\" name=\"username\" error={usernameError} onChange={onChange}/>\r\n                    <Input label=\"Display Name\" name=\"displayName\" error={displayNameError} onChange={onChange}/>\r\n                    <Input label=\"Password\" name=\"password\" error={passwordError} onChange={onChange} type=\"password\"/>\r\n                    <Input label=\"Password Repeat\" name=\"passwordRepeat\" error={passwordRepeatError} onChange={onChange}\r\n                           type=\"password\"/>\r\n                    <div className=\"text-center\">\r\n                        <button className=\"btn btn-primary\" onClick={onClickSingUp}\r\n                                disabled={pendingApiCall || passwordRepeatError}>\r\n                            {pendingApiCall && <span className=\"spinner-border spinner-border-sm\"/>} Sing Up\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n// kendi hooksumuzu oluşturmadan önce böyle yapıyorduk\r\n// const UserSingupPageWithApiProgressForSignup = withApiProgress( UserSingupPage, '/api/users' );\r\n// const UserSingupPageWithApiProgressForLogin = withApiProgress( UserSingupPageWithApiProgressForSignup, '/api/auth' );\r\nexport default UserSingupPage;","import React, {useEffect, useRef, useState} from 'react';\r\nimport logo from \"../img/logo.PNG\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutSuccess} from \"../Redux/authAction\";\r\nimport ProfilePictureWithDefault from \"../components/ProfilePictureWithDefault\";\r\n\r\nconst NavBar = (props) => {\r\n\r\n    const {username, isLoggedIn, displayName, image} = useSelector( (store) => ({\r\n        isLoggedIn: store.isLoggedIn,\r\n        username: store.username,\r\n        displayName: store.displayName,\r\n        image: store.image\r\n    }) )\r\n    const menuArea = useRef( null );\r\n    const [menuVisible, setMenuVisible] = useState( false );\r\n\r\n    useEffect( () => {\r\n        document.addEventListener( \"click\", menuClickTracler );\r\n        return () => {\r\n            document.removeEventListener( \"click\", menuClickTracler )\r\n        }\r\n    }, [isLoggedIn] )\r\n    const menuClickTracler = (event) => {\r\n        if (menuArea.current === null || !menuArea.current.contains( event.target ))\r\n            setMenuVisible( false );\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogoutSuccess = () => {\r\n        dispatch( logoutSuccess() );\r\n    }\r\n\r\n    let Links = (\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li>\r\n                <Link className=\"nav-link mr-1 font-weight-bolder\" to=\"/login\">\r\n                    <i className=\"material-icons d-block\">login</i>Login</Link>\r\n            </li>\r\n            <li>\r\n                <Link className=\"nav-link text-center font-weight-bolder\" to=\"/singup\">\r\n                    <i className=\"material-icons d-block\"> group_add</i>Sing Up</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n    if (isLoggedIn) {\r\n        let dropdownClass = \"dropdown-menu p-0 shadow\"\r\n        if (menuVisible)\r\n            dropdownClass += \" show\";\r\n\r\n        Links = (\r\n            <ul className=\"navbar-nav ml-auto\" ref={menuArea}>\r\n                <li className=\"nav-item dropdown\">\r\n                    <div className=\"d-flex\" style={{cursor: \"pointer\"}} onClick={() => setMenuVisible( true )}>\r\n\r\n                        <ProfilePictureWithDefault className=\"rounded-circle m-auto\" image={image} width=\"49\" height=\"49\"/>\r\n                        <span className=\"nav-link dropdown-toggle font-weight-bolder\">{displayName}</span>\r\n                    </div>\r\n                    <div className={dropdownClass}>\r\n\r\n                        <Link className=\"dropdown-item d-flex p-2\" to={\"/users/\" + username}\r\n                              onClick={() => setMenuVisible( false )}>\r\n                            <i className=\"material-icons text-info mr-2\">person</i>My profile</Link>\r\n\r\n                        <Link className=\"dropdown-item d-flex p-2\" to=\"/\" onClick={onLogoutSuccess}>\r\n                            <i className=\"material-icons text-danger mr-2\">power_settings_new</i> Logout</Link>\r\n                    </div>\r\n                </li>\r\n\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"shadow-sm bg-light mb-2\">\r\n            <nav className=\"navbar navbar-light container navbar-expand\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img src={logo} alt=\"logo\" width=\"153\" height=\"60\" className=\"mr-3\"/>\r\n                </Link>\r\n                {Links}\r\n            </nav>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n//\r\n// const mapStateToProps = store => {            hook la almadan önce kullanılıyordu onun yerine useSelector ve useDispacth\r\n//     return {};\r\n// };\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         onLogoutSuccess: () => dispatch( logoutSuccess() )\r\n//     };\r\n// };\r\n\r\nexport default NavBar;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport {useParams,useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport ProfilePictureWithDefault from \"./ProfilePictureWithDefault\";\r\nimport Input from \"./Input\";\r\nimport {deleteUser, updateUser} from \"../Api/ApiCalls\";\r\nimport {useApiProgress} from \"../Shared/ApiProgress\";\r\nimport {logoutSuccess, updateSucces} from \"../Redux/authAction\";\r\nimport Modal from \"./Modal\";\r\n\r\n\r\nconst ProfileCard = (props) => {\r\n    const [inEditMode, setInEditMode] = useState( false );\r\n    const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n    const {username: loggedInUsername} = useSelector( (store) => ({username: store.username}) );\r\n    const routeParams = useParams();\r\n    const pathUsername = routeParams.username; // kullanamak için withRouterle sarmak lazım\r\n    const [user, setUser] = useState( {} );\r\n    const [editable, setEditable] = useState( false );\r\n    const [newImage, setNewImage] = useState();\r\n    const [errors, setErrors] = useState( {} );\r\n    const dispatch = useDispatch();\r\n    const {username, displayName, image} = user;\r\n    const [modalVisible,setModalVisible]=useState(false)\r\n    const history= useHistory();\r\n\r\n\r\n    useEffect( () => {\r\n        setUser( props.user );   // propsdan gelen  user ı sayfa yüklendiğinde set et\r\n    }, [props.user] );\r\n\r\n\r\n    useEffect( () => {\r\n        setEditable( pathUsername === loggedInUsername );\r\n    }, [pathUsername, loggedInUsername] );\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        setErrors( (prevState) => ({...prevState, displayName: undefined}) )\r\n    }, [updatedDisplayName] )\r\n    useEffect( () => {\r\n        setErrors( (prevState) => ({...prevState, image: undefined}) )\r\n    }, [newImage] )\r\n\r\n    useEffect( () => {\r\n        if (!inEditMode) {\r\n            setUpdatedDisplayName( undefined );\r\n            setNewImage( undefined );\r\n        } else {\r\n            setUpdatedDisplayName( displayName );\r\n        }\r\n    }, [inEditMode, displayName] );\r\n\r\n    const onClickCancel=()=>{\r\n        setModalVisible(false);\r\n    }\r\n    const onClickDeleteUser=async ()=>{\r\n        await deleteUser();\r\n        dispatch(logoutSuccess());\r\n        history.push(\"/\");\r\n        setModalVisible(false)\r\n    }\r\n\r\n    const onClickSave = async () => {\r\n        let image = undefined\r\n        if (newImage)\r\n            image = newImage.split( ',' )[1];\r\n\r\n        const body = {\r\n            displayName: updatedDisplayName,\r\n            image\r\n        }\r\n        try {\r\n            const response = await updateUser( username, body );\r\n            setInEditMode( false );\r\n            setUser( response.data );\r\n\r\n            dispatch( updateSucces( response.data ) );\r\n\r\n        } catch (error) {\r\n            setErrors( error.response.data.validationErrors );\r\n\r\n        }\r\n    }\r\n\r\n    const onChangeFile = event => {\r\n\r\n        if (event.target.files.length < 1)\r\n            return;\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n\r\n            setNewImage( fileReader.result );\r\n        };\r\n        fileReader.readAsDataURL( file );\r\n    };\r\n\r\n    const pendingApiCall = useApiProgress( \"put\", \"/api/users/\" + username );\r\n    const pendingApiCallforDelete=useApiProgress(\"delete\",\"/api/users\");\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card text-center\">\r\n                <div className=\"card-header\">\r\n                    <ProfilePictureWithDefault className=\"rounded-circle shadow\" image={image} tempimage={newImage}\r\n                                               alt={user.username + \"profile picture\"} width=\"200px\" height=\"200px\"\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"card-body\"><h3>{displayName} <span className=\"font-weight-lighter\">@{username}</span>\r\n                </h3>\r\n                    {(!inEditMode && editable) && <>\r\n                        <button className=\"btn btn-primary d-inline-flex\" onClick={() => setInEditMode( true )}>\r\n                            <i className=\"material-icons\">edit</i>Edit\r\n                        </button>\r\n                        <div></div>\r\n                        <button className=\"btn btn btn-danger mt-2 d-inline-flex\" onClick={()=>setModalVisible(true)}>\r\n                            <i className=\"material-icons\">delete_forever</i> delete my account\r\n                        </button>\r\n                    </>\r\n                    }\r\n                    {inEditMode && <> <Input label=\"Change your display name\" defaultValue={displayName}\r\n                                             error={errors.displayName} onChange={(event) => {\r\n                        setUpdatedDisplayName( event.target.value )\r\n                    }}>\r\n\r\n                    </Input>\r\n                        <Input className=\"form-control-file\" type=\"file\" onChange={onChangeFile} error={errors.image}/>\r\n\r\n                        <button className=\"btn btn-primary btn-sm d-inline-flex mr-2\"\r\n                                onClick={onClickSave} disabled={pendingApiCall}>\r\n                            {pendingApiCall ? <span className=\"spinner-border spinner-border-sm d-inline-flex mr-2\"/> :\r\n                                <i className=\"material-icons\">done</i>} Save\r\n                        </button>\r\n                        <button className=\"btn btn-danger btn-sm d-inline-flex\"\r\n                                onClick={() => setInEditMode( false )} disabled={pendingApiCall}>\r\n                            <i className=\"material-icons\">close</i>Cancel\r\n                        </button>\r\n\r\n                    </>\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Modal visible={modalVisible} onClickCancel={onClickCancel}\r\n                   onClickOk={onClickDeleteUser} modalTittle={`Delete My Account`}\r\n                   message={\"Are you sure to delete your account\"}\r\n                   pendingApiCall={pendingApiCallforDelete}\r\n            />\r\n        </>\r\n    )\r\n}\r\n//\r\n// const mapDispatchToProps=store=>{        hook dan önce store erişmek için kullanılıyordu\r\n//     return{\r\n//         loggedUsername:store.username\r\n//     }\r\n// }\r\nexport default ProfileCard;","import React, {useEffect, useState} from 'react';\r\nimport ProfileCard from \"../components/ProfileCard\";\r\nimport {getUser} from \"../Api/ApiCalls\";\r\nimport {useApiProgress} from \"../Shared/ApiProgress\";\r\nimport Spiner from \"../components/Spiner\";\r\nimport TweetFeed from \"../components/TweetFeed\";\r\n\r\nconst UserPage = (props) => {\r\n    const [user, setUser] = useState({}); // ilk başta boş bi array paslıyoruz, props olarak null gitmemesi için\r\n    const [notFound, setNotFound] = useState( false );\r\n    const username = props.match.params.username; // useParams() ile hooks ile de alabilirdik\r\n    const pendingApiCall=useApiProgress(\"get\",\"/api/users/\"+username,true)\r\n\r\n    useEffect( () => {\r\n        const loadUser = async () => {\r\n            try {\r\n                const response = await getUser( username )\r\n                setUser( response.data )\r\n                setNotFound( false );\r\n            } catch (e) {\r\n                setNotFound( true )\r\n            }\r\n        };\r\n        loadUser();\r\n    }, [username] )\r\n\r\n\r\n\r\n    if (notFound) {\r\n        return (\r\n            <div className=\"alert alert-danger text-center m-5\">\r\n                <i className=\"material-icons d-block\" style={{fontSize: \"45px\"}}>error</i>\r\n                User not found !\r\n            </div>\r\n        )\r\n    }\r\n    if(pendingApiCall || user.username!==username){\r\n        return <Spiner/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <ProfileCard user={user}></ProfileCard>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <TweetFeed/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport default UserPage;","import React from \"react\";\r\nimport LoginPage from \"./Pages/LoginPage\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport {HashRouter as Router, Route, Switch,Redirect} from 'react-router-dom';\r\nimport UserSingupPage from \"./Pages/UserSingupPage\";\r\nimport NavBar from \"./Pages/NavBar\";\r\nimport UserPage from \"./Pages/UserPage\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction App()  {\r\n        const {isLoggedIn}=useSelector((store)=>({isLoggedIn:store.isLoggedIn}))\r\n\r\n        return (\r\n            <Router>  {/*ROUTER BACKEND E OTOMATİK REQUEST ATTIĞI İÇİN HASTROUTER KULLANDIK*/}\r\n                <NavBar/>\r\n                <Switch>\r\n                    {!isLoggedIn &&  <Route path=\"/login\" component={LoginPage}/>}\r\n\r\n                    <Route exact path=\"/\" component={HomePage}/>\r\n                    <Route path=\"/singup\" component={UserSingupPage}/>\r\n                    <Route path=\"/users/:username\" component={UserPage}/>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </Router>\r\n        );\r\n\r\n\r\n}\r\n//\r\n// const mapStateToProps=(store)=>{    Hook s dan önce isLoggedIn bilgisi almak için kullanıyordu\r\n//     return{\r\n//         isLoggedIn:store.isLoggedIn\r\n//     }\r\n// }\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ACTIONS from \"./Constants\"\r\n\r\nconst defaultState={\r\n    isLoggedIn:false,\r\n    username:undefined,\r\n    displayName:undefined,\r\n    image:undefined,\r\n    password:undefined\r\n}\r\n\r\nconst authReducer=(state={...defaultState},action)=>{\r\n    if(action.type===ACTIONS.LOGOUT_SUCCESS)\r\n        return defaultState;\r\n    else if(action.type===ACTIONS.LOGIN_SUCCESS){\r\n    return {\r\n            ...action.payload,\r\n            isLoggedIn:true\r\n         }\r\n    }else if(action.type===ACTIONS.UPDATE_SUCCESS){\r\n    return {\r\n        ...state,\r\n        displayName:action.payload.displayName,\r\n        image:action.payload.image\r\n    }\r\n    }\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default authReducer;","import {applyMiddleware, createStore} from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport SecureLS from \"secure-ls\";\r\nimport thunk from \"redux-thunk\";\r\nimport {setAuthorizationHeader} from \"../Api/ApiCalls\";\r\n\r\nconst SecureLs = new SecureLS();   // browser ın localstorage ından şifreli şekilde veri tutmak için\r\n\r\nconst getStateFromStorage = () => {\r\n    const authData = SecureLs.get( \"auth\" );\r\n    let stateInLocalStorage = {\r\n        isLoggedIn: false,\r\n        username: undefined,\r\n        displayName: undefined,\r\n        image: undefined,\r\n        password: undefined\r\n    }\r\n    if (authData)\r\n        stateInLocalStorage = authData\r\n    return stateInLocalStorage;\r\n}\r\nconst updateStateInStorage = newState => {\r\n    SecureLs.set( \"auth\", newState );\r\n}\r\n\r\nconst configureStore = () => {\r\n    const initialState = getStateFromStorage();\r\n    setAuthorizationHeader( initialState ); // login olan kullanıcının userlist de gözükmemesi için\r\n    const store = createStore( authReducer, initialState, applyMiddleware( thunk ) );\r\n    store.subscribe( () => {\r\n        updateStateInStorage( store.getState() );\r\n        setAuthorizationHeader( store.getState() );  // logout olduğunda Userlist te göster. Store da güncelleme olduğunda ekle\r\n    } )\r\n    return store\r\n\r\n}\r\nexport default configureStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./bootstrapt-override.scss\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport configureStore from \"./Redux/ConfigureStore\";\n\n\n\n\nconst store=configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}